input {
  file {
    path => "/usr/share/logstash/logs/flog/*"
    start_position => "beginning"
    type => "flog"
    sincedb_path => "/dev/null"
  }
  file {
    path => "/usr/share/logstash/logs/lps/*"
    start_position => "beginning"
    type => "lps"
    sincedb_path => "/dev/null"
  }
}
filter {
    if [type] == "flog" {
        grok {
		    match => { "message" => ['%{IP:ip} %{USER:userid} %{USERNAME:username} \[%{HTTPDATE:timestamp}\] \"%{WORD:method} %{PATH:path} %{DATA:protocol}\" %{NUMBER:status} %{NUMBER:bytes}'] }
        }
        date {
    	    match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z"] #04/Apr/2023:19:09:11 +0200
    	    #timezone => "Europe/Stockholm" 
	        target => "@timestamp"
	    }
        mutate {
	        convert => { 
                "status" => "integer"
                "bytes" => "integer"
            }
            remove_field => [ "@version", "[host][name]", "[event][original]", "[log][file][path]", "timestamp"]
        }
    }

    else if [type] == "lps" {
        grok {
		    match => { "message" => ['T:%{TIMESTAMP_ISO8601:timestamp}, MarkersValid: %{WORD:markers_valid}, TrolleyPos: %{NUMBER:trolley_pos}, Hoistpos: %{NUMBER:hoist_pos}, TrSpd: %{NUMBER:tr_spd}, GaSpd: %{NUMBER:ga_spd}, MhSpd: %{NUMBER:mh_spd}, NoOfMarkers: %{NUMBER:no_of_markers}, m1: \(%{NUMBER:[m1][x]},%{NUMBER:[m1][y]}\) , m2: \(%{NUMBER:[m2][x]},%{NUMBER:[m2][y]}\) , m3: \(%{NUMBER:[m3][x]},%{NUMBER:[m3][y]}\) , m4: \(%{NUMBER:[m4][x]},%{NUMBER:[m4][y]}\) , m5: \(%{NUMBER:[m5][x]},%{NUMBER:[m5][y]}\) , m6: \(%{NUMBER:[m6][x]},%{NUMBER:[m6][y]}\)'] }
        }
        date {
    	    match => [ "timestamp", "yyyy-MM-dd HH:mm:ss.SSSSSS", "yyyy-MM-dd HH:mm:ss"]
    	    timezone => "Europe/Stockholm"
	        target => "@timestamp"
	    }
        mutate {
	        convert => { 
                "markers_valid" => "boolean" 
                "trolley_pos" => "float"
                "hoist_pos" => "float"
                "tr_spd" => "float"
                "ga_spd" => "float"
                "mh_spd" => "float"
                "no_of_markers" => "integer"
                "[m1][x]" => "integer"
                "[m1][y]" => "integer"
                "[m2][x]" => "integer"
                "[m2][y]" => "integer"
                "[m3][x]" => "integer"
                "[m3][y]" => "integer"
                "[m4][x]" => "integer"
                "[m4][y]" => "integer"
                "[m5][x]" => "integer"
                "[m5][y]" => "integer"
                "[m6][x]" => "integer"
                "[m6][y]" => "integer"
            }
            remove_field => [ "@version", "[host][name]", "[event][original]", "message", "timestamp"]
        }
    }   
}
output {
  if [type] == "flog" {
    elasticsearch {
      hosts => "elasticsearch:9200"
      index => "flog-logs-%{+YYYY.MM.dd}"
    }
  }
  else if [type] == "lps" {
    elasticsearch {
      hosts => "elasticsearch:9200"
      index => "lps-logs-%{+YYYY.MM.dd}"
    }
  }
  else {
    stdout { codec => rubydebug }
  }
}